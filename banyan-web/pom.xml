<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.robestone.species</groupId>
	<artifactId>species-tapestry</artifactId>
	<version>1.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>species-tapestry</name>
	<dependencies>
		<dependency>
			<groupId>com.robestone.species</groupId>
			<artifactId>species-domain</artifactId>
			<version>1.2-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-spring</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>2.5.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>2.5.6</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- Run the application using "mvn jetty:run" 
			http://localhost:8080/species-tapestry/search
			-->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.9</version>
				<configuration>
					<!-- Log to the console. -->
					<requestLog
						implementation="org.mortbay.jetty.NCSARequestLog">
						<!-- This doesn't do anything for Jetty, but is a workaround for a 
							Maven bug that prevents the requestLog from being set. -->
						<append>true</append>
					</requestLog>
					<connectors>
						<connector
							implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8080</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
						<!-- Images are being kept at D:/banyan-images, and "banyan-images" is the context root
							Need to make this cleaner probably
					<resourceBases>
						<resourceBase>src/main/webapp</resourceBase>
						<resourceBase>D:/</resourceBase>
					</resourceBases>
						-->
					<webApp>
						<contextPath>/banyan</contextPath>
                    	<war>${basedir}/target/species.war</war>
					</webApp>
					<contextHandlers>
						<contextHandler implementation="org.mortbay.jetty.handler.ContextHandler">
                    		<contextPath>/banyan-images</contextPath>
                    		<resourceBase>D:/banyan-images</resourceBase>
                    		<handler implementation="org.mortbay.jetty.handler.ResourceHandler" />
                		</contextHandler>
                	</contextHandlers>
				</configuration>
			</plugin>


			<!-- This changes the WAR file packaging so that what would normally go 
				into WEB-INF/classes is instead packaged as WEB-INF/lib/species-tapestry.jar. 
				This is necessary for Tapestry to be able to search for page and component 
				classes at startup. Only certain application servers require this configuration, 
				please see the documentation at the Tapestry 5 project page (http://tapestry.apache.org/tapestry5/). -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<warName>species</warName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
					<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
					<downloadSources>true</downloadSources>
					<useProjectReferences>false</useProjectReferences>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

	<reporting>

		<!-- Adds a report detailing the components, mixins and base classes defined 
			by this module. -->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version>
				<configuration>
					<rootPackage>com.robestone.species.tapestry</rootPackage>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<!-- This can be commented out when the tapestry-release-version is a not 
			a snapshot. The non-snapshot Tapestry artifacts are distributed through the 
			central repository at ibiblio. -->
<!--
		<repository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</repository>
 
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>
 -->
 
 		<repository>
			<id>maven-central-overwrite</id>
			<url>http://central.maven.org/maven2/</url>
		</repository>
 
	</repositories>

	<pluginRepositories>

		<!-- As above, this can be commented out when access to the snapshot version 
			of a Tapestry Maven plugin is not required. -->
			<!-- 
		<pluginRepository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</pluginRepository>
 -->

	</pluginRepositories>

	<properties>
		<tapestry-release-version>5.1.0.5</tapestry-release-version>
	</properties>
</project>
