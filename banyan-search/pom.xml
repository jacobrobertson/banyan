<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jacobrobertson.banyan</groupId>
	<artifactId>banyan-search</artifactId>
	<version>0.0.1-SNAPSHOT</version>

<!-- 
1. mvn package
2. java -jar banyan-search.jar

NOTE, under NFSN, you will need to pass in the lucene dir, but
locally this seems to work coming from application.properties

To run this from eclipse
1. Set the banyan-js/src/main as a linked source from banyan-search's build sources.  This will place it in target
2. Run as spring-boot
3. browse to the following - I don't think it works without index.html 
	http://localhost:8081/webapp/index.html
4. You probably have to refresh banyan-search anytime a resource in banyan-js changes

 -->

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
	</parent>

	<dependencies>
	
		<dependency>
			<groupId>com.robestone.species</groupId>
			<artifactId>species-domain</artifactId>
			<version>1.3-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<artifactId>derby</artifactId>
					<groupId>org.apache.derby</groupId>
				</exclusion>
				<exclusion>
					<artifactId>derbytools</artifactId>
					<groupId>org.apache.derby</groupId>
				</exclusion>
				<exclusion>
					<artifactId>imageio-jpeg</artifactId>
					<groupId>com.twelvemonkeys.imageio</groupId>
				</exclusion>
				<exclusion>
					<artifactId>spring-jdbc</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.json-api</artifactId>
					<groupId>javax.json</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.json</artifactId>
					<groupId>org.glassfish</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<folders>
						<folder>${project.build.directory}/../../banyan-js/src/main/webapp</folder>
					</folders>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
</project>